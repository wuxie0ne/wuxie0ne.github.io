<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[docker笔记]]></title>
    <url>%2F2019%2F03%2F10%2Fdocker%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Docker笔记Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。 前言Docker和虚拟机的区别： 安装配置Docker注册Docker_Hub账号，前往官网下载 官方的Docker容器市场Docker_Hub 设置国内的Docker代理加速 1234567&#123; "registry-mirrors": [ "https://registry.docker-cn.com", "https://u00m1i1y.mirror.aliyuncs.com", // 私人的阿里云docker镜像加速 "http://f1361db2.m.daocloud.io" ]&#125; 检查Docker是否安装成功，执行$ docker version 基础操作 搜索可用docker镜像$ docker search nginx 下载容器镜像$ docker pull nginx:latest 冒号后指定镜像tag，默认为latest 运行hello-world$ docker run --rm hello-world 其它常用参数： --name： 指定容器的名称 --p: 设置映射的端口 -d\-it：是否回到宿主的bash 常用命令 docker start 启动一个容器 docker stop 停止一个容器（保留状态） docker rm 删除一个容器 docker rmi 删除一个镜像 docker ps | -a 查看容器状态 docker image ls | images 查看镜像状态 Ctrl+P + Ctrl+Q | exit 退出容器的bash docker exec -it 2c /bin/bash 进入容器的bash 例子docker run -it --rm -p 8000:80 --name aspnetcore_sample microsoft/dotnet-samples:aspnetapp -it 自动进入容器内的bash -p 8000:80 容器内的80端口对应外部真实的8000端口 --rm 运行结束后自动删除容器 --name aspnetcore_sample 为容器内的应用命名 -d 分离，后台运行 docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mysql57 -d mysql:5.7 DockerfileFROM，引用的镜像MAINTAINER，镜像维护人RUN，定义需要运行的命令。例如：npm i, dotnet restore等。COPY，开发时把源码放在Volumes里。生产环境下，使用COPY把源码复制到容器里面。ENTRYPOINT，定义容器的入口，把容器配置成exe一样的运行文件。CMD，设置容器运行的默认命令和参数，容器运行时，可以被命令行覆盖。WORKDIR，设定容器运行的工作目录。EXPOST，暴露端口。ENV，设定环境变量。VOLUME，定义Volume，并控制如何在宿主机中进行存储。 Swarm(Cluster) 集群管理节点维护者swarm管理节点是高可用的管理节点数目建议3、5个只有一个是首领RAFT算法 工人节点执行任务Services：声明、可扩展Task Volumedocker run -p 8000:80 -v ${PWD}:/var/www microsoft/dotnet-samples:aspnetapp]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建hexo博客]]></title>
    <url>%2F2019%2F03%2F09%2F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建博客hexo 是一个快速、简介且高效的博客框架。使用GitHub Page能方便的部署静态网页。 超快速度 支持 Markdown 一键部署 插件丰富 初始化项目12345npm i hexo-cli -ghexo init hexo-blogcd blognpm ihexo server 项目目录： 安装NexT主题NexT 精于心，简于行。 一个主题，三种风格 多语言支持 可定制化程度高 安装、配置的详细步骤： 12cd hexo-bloggit clone https://github.com/iissnan/hexo-theme-next themes/next 启用主题，编辑站点配置文件 theme: next可选的三种主题 Muse、Mist、Pisces，推荐Pisces，编辑主题配置文件 scheme: Pisces设置语言，编辑站点配置文件 language: zh-Hans 基础配置编辑站点配置文件 1234567title: wuxie0ne's blogsubtitle: 日拱一卒，功不唐捐description: 技术博客keywords:author: wuxie0nelanguage: zh-Hanstimezone: Asia/Shanghai 编辑主题配置文件 123456social: GitHub: https://github.com/wuxie0ne || github E-Mail: mailto:wuxie0ne@qq.com || envelopesocial_icons: enable: true 配置菜单 菜单位置，修改sidebar.position。 例如：菜单增加归档 编辑主题配置文件 12345menu: home: / archives: /archives/ || archivemenu_icons: enable: true 在项目目录下执行命令 hexo new page archives 添加archives页面 编辑./source/archives/index.md 12345---title: Archivestype: "archives"date: 2019-03-09 16:49:29--- 常用插件 hexo-generator-searchdb hexo-generator-searchdb是本地搜索插件，十分方便。在项目目录下执行 npm install hexo-generator-searchdb --save编辑项目配置文件 12345search: path: search.xml field: post format: html limit: 10000 hexo-deployer-git hexo-deployer-git能够将项目方便的部署在Gethub Page上。执行 npm install hexo-deployer-git --save编辑项目配置文件 1234deploy: type: git repository: git@github.com:wuxie0ne/wuxie0ne.github.io.git # ssh branch: master hexo-generator-feed hexo-generator-feed提供了RRS服务。执行 npm install hexo-generator-feed编辑项目配置文件 12feed: limit: false 其它配置 leancloud_visitors 阅读次数统计 baidu_analytics 百度统计 valine valine评论 常用命令hexo cleanhexo shexo dhexo new &quot;一篇博客&quot;]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
